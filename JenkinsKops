pipeline {
    agent any
     environment {
         AWS_BIN = '/usr/local/bin/aws'
     }

    stages {
        
        stage('KOPS deploy stage') {
            
            environment {
                AWS_BIN = '/usr/local/bin/aws'
            }
            steps {
                 
                  withCredentials([[ 
                       $class: 'AmazonWebServicesCredentialsBinding',
                       credentialsId: 'aws-key',
                       accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                       secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                   ]]) {

                         sh '''
                              if [ -d azuka_helm_terraform ]; then rm -Rf azuka_helm_terraform; fi
                              ./kops/kops.sh

                         '''
                      
                 }
		 
                 echo 'Hello Kops'
                  
               

            }
        }

        stage('Input') {
            steps {
                input('Do you want to proceed to build Terraform?')
            }
        }

        stage('If Proceed is clicked') {
            environment {
                AWS_BIN = '/usr/local/bin/aws'
            }
            steps {
                print('Terraform')
                 script {
                    env.my_stage = 'TERRAFORM'
                 }
 
                // Permission to execute
                // sh "chmod +x -R ${env.WORKSPACE}/../${env.JOB_NAME}@script"
                // Call SH
                // sh "${env.WORKSPACE}/../${env.JOB_NAME}@script/script.sh"

                //env.WORKSPACE = pwd()
                  
                withCredentials([[ 
                       $class: 'AmazonWebServicesCredentialsBinding',
                       credentialsId: 'aws-key',
                       accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                       secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                       sh '''
                            sed -i 's/"0-0-0-0--0/"aws-0-0-0-0--0/g' azuka_helm_terraform/kubernetes.tf
                            
                            // delete terraform file in situ if exits and a data folder
                 
                            //file="kubernetes.tf"
                            //if [ -f $file ] ; then
                            //     rm $file
                            //fi
                            //if [ -d data ]; then rm -Rf data; fi 
                       '''

                       // copy terraform file and data folder to location for Jenkins to call
                       echo "#######"
                       sh " cp  azuka_helm_terraform/kubernetes.tf ."
                       echo "####"
                       sh " cp -Rvp azuka_helm_terraform/data ."

                       sh 'terraform 0.12upgrade -force -yes '
                       sh 'terraform init'
                       sh 'terraform apply -auto-approve'
                }
            }
        }
       
    }
    post {
        
           failure {

               script {
                  //Check for the boolean condition 
                     withCredentials([[ 
                     $class: 'AmazonWebServicesCredentialsBinding',
                     credentialsId: 'aws-key',
                     accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                     secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                     ]]) {

                        sh '''
                           file="kubernetes.tf"
                           if [ -f $file ] ; then
                             rm $file
                           fi
                           if [ -d data ]; then rm -Rf data; fi
                        '''
                        sh './kops/delete-kops.sh' 
                     }
               }
           }
         
     }

}
  
