pipeline {
    agent any
     environment {
         AWS_BIN = '/usr/local/bin/aws'
         my_stage = 'KOPS'
     }

    stages {
        
        stage('KOPS deploy stage') {
            
            environment {
                AWS_BIN = '/usr/local/bin/aws'
            }
            steps {
                 
		  
                  withCredentials([[ 
                       $class: 'AmazonWebServicesCredentialsBinding',
                       credentialsId: 'aws-key',
                       accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                       secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                   ]]) {
                        sh './kops/kops.sh' 
                 }
		 
                 echo 'Hello Kops'
                  
               

            }
        }

        stage('Input') {
            steps {
                input('Do you want to proceed to build Terraform?')
            }
        }

        stage('If Proceed is clicked') {
            environment {
                AWS_BIN = '/usr/local/bin/aws'
            }
            steps {
                print('Terraform')
                 script {
                    env.my_stage = 'TERRAFORM'
                 }
 
                // Permission to execute
                // sh "chmod +x -R ${env.WORKSPACE}/../${env.JOB_NAME}@script"
                // Call SH
                // sh "${env.WORKSPACE}/../${env.JOB_NAME}@script/script.sh"

                //env.WORKSPACE = pwd()
                  
                withCredentials([[ 
                       $class: 'AmazonWebServicesCredentialsBinding',
                       credentialsId: 'aws-key',
                       accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                       secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                       sh " sed -i 's/"0-0-0-0--0/"aws-0-0-0-0--0/g' azuka_helm_terraform/kubernetes.tf "
                       sh " cp -n azuka_helm_terraform/kubernetes.tf ."
                       //sh 'cd azuka_helm_terraform/'
                       sh 'terraform 0.12upgrade -yes'
                       sh 'terraform init'
                       sh 'terraform apply -auto-approve'
                       sh 'cd ..'
                       sh 'cd ..'
                }
            }
        }
       
    }
    post {
        
           failure {

               script {
                  //Check for the boolean condition 
                  if (env.my_stage == 'KOPS') { 
                     withCredentials([[ 
                         $class: 'AmazonWebServicesCredentialsBinding',
                         credentialsId: 'aws-key',
                         accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                         secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]]) {
                        sh './kops/delete-kops.sh' 
                    }
                  } else { 
          
                  } 
               }
           }
         
     }

}
