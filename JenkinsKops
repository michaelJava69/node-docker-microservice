pipeline {
    agent any
    stages {
        environment {
             AWS_BIN = '/usr/local/bin/aws'
        }
        stage('Build KOPS Cluster on AWS') {
            steps {
                 @Library('github.com/releaseworks/jenkinslib')
		
                  withCredentials(
                       $class: 'AmazonWebServicesCredentialsBinding',
                       credentialsId: 'aws-key',
                       accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                       secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                  ) {
                      sh 'AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} AWS_DEFAULT_REGION=us-east-1 ${AWS_BIN} ecs update-service --cluster default --service test-deploy-svc --task-definition test-deploy:2 --desired-count 0'
                      sh 'sleep 1m' // SOOOO HACKY!!!
                      sh 'AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} AWS_DEFAULT_REGION=us-east-1 ${AWS_BIN} ecs update-service --cluster default --service test-deploy-svc --task-definition test-deploy:2 --desired-count 1'
                      sh './kops/kops.sh' 
                 }
		 
                 echo 'Hello Kops'
                  
               

            }
        }

        stage('Input') {
            steps {
                input('Do you want to proceed to build Terraform?')
            }
        }

        stage('If Proceed is clicked') {
            steps {
                print('Terraform')
 
                // Permission to execute
                // sh "chmod +x -R ${env.WORKSPACE}/../${env.JOB_NAME}@script"
                // Call SH
                // sh "${env.WORKSPACE}/../${env.JOB_NAME}@script/script.sh"

                //env.WORKSPACE = pwd()
                  

                sh " sed -i 's/0-0-0-0--0/aws-0-0-0-0--0/g' kubernetes.tf "
                sh 'terraform upgrade:.012'
                sh 'terraform init'
                sh 'terraform apply -auto-approve'
                
            }
        }

      
    }
   

}
